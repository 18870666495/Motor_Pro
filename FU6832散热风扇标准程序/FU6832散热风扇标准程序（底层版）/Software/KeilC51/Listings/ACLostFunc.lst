C51 COMPILER V9.53.0.0   ACLOSTFUNC                                                        04/09/2024 13:54:54 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE ACLOSTFUNC
OBJECT MODULE PLACED IN .\Objects\ACLostFunc.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE ..\User\source\Function\ACLostFunc.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE
                    - INCDIR(..\FU68xx_Hardware_Driver\Include;..\User\include) DEBUG PRINT(.\Listings\ACLostFunc.lst) TABS(2) OBJECT(.\Objec
                    -ts\ACLostFunc.obj)

line level    source

   1          /**
   2            ******************************************************************************
   3            * @file           : ACLostFunc.c
   4            * @copyright      : (c) 2023, Fortior Tech
   5            * @brief          : DELL Coast Mode Áõ∏ÈóúÂäüËÉΩ
   6            ******************************************************************************
   7            * @attention
   8            *
   9            * This software is licensed under terms that can be found in the LICENSE file
  10            * in the root directory of this software component.
  11            * If no LICENSE file comes with this software, it is provided AS-IS.
  12            *
  13            ******************************************************************************
  14            */
  15            
  16          /* Ê®ôÈ†≠Ê™î        Includes ----------------------------------------------------*/
  17          #include "FU68xx_4.h"
  18          #include "MyProject.h"
  19          
  20          /* ÁßÅÊúâÂûãÂà•      Private typedef ---------------------------------------------*/
  21          typedef enum
  22          {
  23            isReady  = 0,                     ///!< PWM ÂÅµÊ∏¨Ê∫ñÂÇô
  24            isDetect = 1,                     ///!< PWM ÂÅµÊ∏¨‰∏≠
  25            isActive = 2,                     ///!< Coast Mode ÈÅã‰Ωú‰∏≠
  26            isWait   = 3                      ///!< Coast Mode Á≠âÂæÖÊµÅÁ®ãÁµêÊùü
  27          }CoastMode_StateType;
  28          
  29          
  30          typedef struct{
  31            CoastMode_StateType state;        ///!< Coast Mode ÁãÄÊÖã
  32            uint16 startDelay;                ///!< Coast Mode ÂÅµÊ∏¨Âª∂ÈÅ≤
  33            uint8  cycle_CNT;                 ///!< Coast Mode ÈÄ±ÊúüË®àÊï∏
  34            uint8  IF_CNT;                    ///!< Coast Mode Ëß∏ÁôºÊôÇÈñìË®àÊï∏
  35            bool   slowWolk_Flag;             ///!< Coast Mode Á∑©Áà¨Âù°ÊóóÊ®ô
  36            uint16 slowWolk_CNT;              ///!< Coast Mode Á∑©Áà¨Âù°Ë®àÊï∏Âô®
  37          }CoastMode_HandleType;
  38          
  39          /* ÁßÅÊúâÂÆöÁæ©      Private define ----------------------------------------------*/
  40          /* ÁßÅÊúâÂ∑®ÈõÜ      Private macro -----------------------------------------------*/
  41          /* ÁßÅÊúâËÆäÊï∏      Private variables -------------------------------------------*/
  42          CoastMode_HandleType DELL_CoastMode_Var;
  43          
  44          /* ÁßÅÊúâÂáΩÂºèÂÆ£Âëä  Private function prototypes ---------------------------------*/
  45          /* ÁßÅÊúâÂáΩÂºè      Private functions -------------------------------------------*/
  46          /**
  47            * @brief  DELL Coast Mode ÂàùÂßãÂåñÂáΩÂºè
  48            * @note   Coast Mode ÂàùÂßãÂåñÂü∑Ë°åÁ®ãÂ∫è
  49            * @return none
  50            */
  51          void DELL_coastMode_Initial(void)
  52          {
  53   1        DELL_CoastMode_Var.startDelay = 2000;
C51 COMPILER V9.53.0.0   ACLOSTFUNC                                                        04/09/2024 13:54:54 PAGE 2   

  54   1        DELL_CoastMode_Var.state = isReady;
  55   1        DELL_CoastMode_Var.cycle_CNT  = 0;
  56   1      }
  57          
  58          
  59          /**
  60            * @brief  DELL Coast Mode Âü∑Ë°åÂáΩÂºè
  61            * @note   Coast Mode Áõ∏ÈóúÂü∑Ë°åÁ®ãÂ∫è„ÄÇ
  62            * @return none
  63            */
  64          void DELL_coastMode_Process(void)
  65          {
  66   1        if (DELL_CoastMode_Var.startDelay != 0)
  67   1          DELL_CoastMode_Var.startDelay--;
  68   1        
  69   1        if (DELL_CoastMode_Var.slowWolk_CNT != 0)
  70   1          DELL_CoastMode_Var.slowWolk_CNT--;
  71   1        
  72   1      }
  73          
  74          
  75          /**
  76            * @brief  DELL Coast Mode ÁãÄÊÖãËß∏ÁôºÂáΩÂºè
  77            * @note   ÂõûÂÇ≥ Coast Mode Ëß∏ÁôºÔºåÁî±ÊñºÂèóÂà∞Â∞àÊ°àÊ®ôÈ†≠Ê™îÂåÖË£ùÁ∑£ÊïÖÔºåÁãÄÊÖãÊ©üÁÑ°Ê≥ïÂÇ≥ÈÅûÔºåÊ
             -ïÖ‰ΩøÁî®Ê≠§ÂáΩÊï∏ÂÇ≥ÈÅûÁãÄÊÖãÔºõ
  78            *         ÁãÄÊÖãÊ©üÊ≠§ÂáΩÊï∏Âè™ÊúÉËß∏Áôº‰∏ÄÊ¨°ÔºåËß∏ÁôºÂæåÁãÄÊÖãËÆäÁÇ∫ isWait Á≠âÂæÖ PWM ‰ø°ËôüÊÅ¢Âæ©„ÄÇ
  79            * @return [bool] ÂõûÂÇ≥Ëß∏ÁôºÁãÄÊÖã
  80            */
  81          bool DELL_coastMode_State(void)
  82          {
  83   1        if (DELL_CoastMode_Var.state == isActive)
  84   1        {
  85   2          DELL_CoastMode_Var.state = isWait;
  86   2          return true;
  87   2        }
  88   1        return false;
  89   1      }
  90          
  91          
  92          /**
  93            * @brief  DELL Coast Mode Á∑©Áà¨Âù°Ëß∏ÁôºÂáΩÂºè
  94            * @note   ÂõûÂÇ≥ÊòØÂê¶ËôïÊñºÁ∑©Áà¨Âù°ÁãÄÊÖãÔºåÊ≠§ÂáΩÂºèÂÉÖËÉΩÂú®È†ÜÈÄÜÈ¢®ËôïÁêÜÊôÇË™øÁî®„ÄÇ
  95            * @return [bool] ÂõûÂÇ≥Ëß∏ÁôºÁãÄÊÖã
  96            */
  97          bool DELL_coastMode_slowWolkState(void)
  98          {
  99   1        return DELL_CoastMode_Var.slowWolk_Flag;
 100   1      }
 101          
 102          
 103          /**
 104            * @brief  DELL Coast Mode IF ÊçïÁç≤‰∫ã‰ª∂ÂáΩÂºè
 105            * @note   Coast Mode ÊçïÁç≤Êñ∑Èõª‰ø°ËôüËôïÁêÜÁ®ãÂ∫èÔºåÊú¨ÂáΩÂºèÂÉÖËÉΩÊñºTIM3 IF ‰∏≠Êñ∑ÂÖßË™øÁî®„ÄÇ
 106            * @return none  
 107            */
 108          void DELL_coastMode_IF_Event(void)
 109          {
 110   1        if (ReadBit(P0, PIN1) == PWM_OFState && DELL_CoastMode_Var.startDelay == 0 && DELL_CoastMode_Var.state =
             -= isDetect)
 111   1        {
 112   2          // Áî±Êñº 99.97% ÊúâÊ©üÁéáË¢´Ë≠òÂà•ÁÇ∫ 0% ÔºåÊ∑ªÂä†nopÂæåÂÜçÊ¨°Âà§ÂÆöÁãÄÊÖãÔºåÈò≤Ê≠¢Ë™§Ëß∏Áôº
 113   2          _nop_();
C51 COMPILER V9.53.0.0   ACLOSTFUNC                                                        04/09/2024 13:54:54 PAGE 3   

 114   2          if (ReadBit(P0, PIN1) == PWM_OFState)
 115   2          {
 116   3            MOE = 0;
 117   3            
 118   3            #if (ROTATESIGNAL_TYPE == FG_TYPE)
 119   3            {
 120   4              FG_setFakeSpped(mcFocCtrl.SpeedFlt);
 121   4            }
 122   3            #endif
 123   3            
 124   3            DELL_CoastMode_Var.cycle_CNT  = 0;
 125   3            DELL_CoastMode_Var.startDelay = 200;
 126   3            DELL_CoastMode_Var.state      = isActive;
 127   3          }
 128   2        }
 129   1        
 130   1        if (ReadBit(P0, PIN1) == PWM_OFState)
 131   1          DELL_CoastMode_Var.IF_CNT++;
 132   1      }
 133          
 134          
 135          /**
 136            * @brief  DELL Coast Mode ÂÅµÊ∏¨‰ø°Ëôü‰∫ã‰ª∂ÂáΩÂºè
 137            * @note   Coast Mode ÊçïÁç≤Ëº∏ÂÖ•‰ø°ËôüËôïÁêÜÁ®ãÂ∫è„ÄÇ
 138            * @return none
 139            */
 140          void DELL_coastMode_IC_Event(uint16 duty)
 141          {
 142   1        if(DELL_CoastMode_Var.state != isDetect && DELL_CoastMode_Var.startDelay == 0)
 143   1        {
 144   2          if (DELL_CoastMode_Var.cycle_CNT > 5)
 145   2            DELL_CoastMode_Var.state = isDetect;
 146   2          else if (duty > _Q15(0.01))
 147   2            DELL_CoastMode_Var.cycle_CNT++;
 148   2          else
 149   2            DELL_CoastMode_Var.cycle_CNT = 0;
 150   2        }
 151   1        
 152   1        if (DELL_CoastMode_Var.IF_CNT >= 2 && DELL_CoastMode_Var.IF_CNT < 4)
 153   1        {
 154   2          DELL_CoastMode_Var.slowWolk_Flag = 1;
 155   2          DELL_CoastMode_Var.slowWolk_CNT  = 15000;
 156   2        }
 157   1        DELL_CoastMode_Var.IF_CNT = 0;
 158   1      }
 159          
 160          
 161          /**
 162            * @brief  DELL Coast Mode Á∑©Áà¨Âù°ÂáΩÂºè
 163            * @note   Coast Mode Á∑©Áà¨Âù°ËôïÁêÜÁ®ãÂ∫è„ÄÇ
 164            * @param  [MCRAMP *] Áà¨Âù°ÁµêÊßã
 165            * @return [uint16]   ÈÅûÂ¢ûÂÄº
 166            */
 167          uint16 DELL_costMode_SlowWolk(MCRAMP *ramp)
 168          {
 169   1        if (DELL_CoastMode_Var.slowWolk_CNT != 0 && DELL_CoastMode_Var.slowWolk_Flag == 1)
 170   1        {
 171   2          if (mcFocCtrl.SpeedFlt > (ramp->TargetValue * 0.8))
 172   2          {
 173   3            DELL_CoastMode_Var.slowWolk_Flag = 0;
 174   3            return ramp->IncValue;
 175   3          }
C51 COMPILER V9.53.0.0   ACLOSTFUNC                                                        04/09/2024 13:54:54 PAGE 4   

 176   2          else
 177   2            return 20;
 178   2        }
 179   1        return ramp->IncValue;
 180   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    412    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      8       3
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
