C51 COMPILER V9.53.0.0   I2C                                                               04/09/2024 13:54:57 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE I2C
OBJECT MODULE PLACED IN .\Objects\I2C.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE ..\User\source\Hardware\I2C.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR
                    -(..\FU68xx_Hardware_Driver\Include;..\User\include) DEBUG PRINT(.\Listings\I2C.lst) TABS(2) OBJECT(.\Objects\I2C.obj)

line level    source

   1          /* --------------------------- (C) COPYRIGHT 2020 Fortiortech ShenZhen -----------------------------
   2              File Name      : I2C.c
   3              Author         : Fortiortech  Appliction Team
   4              Version        : V1.0
   5              Date           : 2020-04-11
   6              Description    : This file contains .C file function used for Motor Control.
   7          ----------------------------------------------------------------------------------------------------  
   8                                                 All Rights Reserved
   9          ------------------------------------------------------------------------------------------------- */
  10          #include "FU68xx_4.h"
  11          #include "MyProject.h"
  12          
  13          /*
  14          void I2C_Init_Master(void)
  15          {
  16              SetBit(P0_PU , P00);
  17              SetBit(P0_PU , P01);
  18             // I2C initial
  19              SetBit(I2C_CR , I2CMS);     //主从模式选择  0-->Slave Mode  1-->Host Mode
  20              ClrBit(I2C_CR , I2CSPD1); //00-->100kHz   01-->400kHz
  21              SetBit(I2C_CR , I2CSPD0); //10-->1MHz     11-->RSV
  22              ClrBit(I2C_CR , I2CIE);     //中断使能       0-->Disable 1-->Enable
  23              I2C_ID = 0xD0;   
  24              SetBit(I2C_ID , GC);  //广播呼叫使能  0-->Disable 1-->Enable
  25              SetBit(I2C_CR , I2CEN); //I2C使能   0-->Disable 1-->Enable
  26          }
  27          
  28          void I2C_ID_Start(bool rw)
  29          {
  30              if(rw)
  31                  SetBit(I2C_SR , DMOD);  
  32              else
  33                  ClrBit(I2C_SR , DMOD);  
  34              SetBit(I2C_SR , I2CSTA);  //1-->发送START或RESTART和地址字节
  35              while(!ReadBit(I2C_SR , STR));
  36              ClrBit(I2C_SR , STR);    
  37          }
  38          
  39          void I2C_Addr_Write(unsigned char addr,unsigned char wdata)
  40          {
  41              I2C_ID_Start(0);    // ID write
  42          
  43              I2C_DR = addr;      // Slave reg addr.
  44              while(!ReadBit(I2C_SR , STR));  
  45              ClrBit(I2C_SR , STR);
  46          
  47              I2C_DR = wdata;     // Slave reg data.
  48              while(!ReadBit(I2C_SR , STR));  
  49              ClrBit(I2C_SR , STR);
  50              SetBit(I2C_SR , I2CSTP);  //1-->发送STOP
  51          }
  52          
  53          unsigned char I2C_Addr_Read(char addr)
  54          {
C51 COMPILER V9.53.0.0   I2C                                                               04/09/2024 13:54:57 PAGE 2   

  55              unsigned char rd_data;
  56              //write process  
  57              I2C_ID_Start(0);  // write+ID
  58              I2C_DR = addr;   // write reg. addr
  59              while(!ReadBit(I2C_SR , STR));  
  60              ClrBit(I2C_SR , STR);
  61          //    SetBit(I2C_SR , I2CSTP);  //1-->发送STOP
  62          
  63              //read process
  64              I2C_ID_Start(1);  // read+ID
  65              while(!ReadBit(I2C_SR , STR));   
  66              ClrBit(I2C_SR , STR);
  67              rd_data = (unsigned char)(I2C_DR); // read data
  68              SetBit(I2C_SR , NACK);      //第9位发送NACK 
  69              SetBit(I2C_SR , I2CSTP);    //1-->发送STOP
  70              return(rd_data);
  71          }*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   ----    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
