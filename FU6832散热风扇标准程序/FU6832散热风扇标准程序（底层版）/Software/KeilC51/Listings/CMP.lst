C51 COMPILER V9.53.0.0   CMP                                                               04/09/2024 13:54:56 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE CMP
OBJECT MODULE PLACED IN .\Objects\CMP.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE ..\User\source\Hardware\CMP.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR
                    -(..\FU68xx_Hardware_Driver\Include;..\User\include) DEBUG PRINT(.\Listings\CMP.lst) TABS(2) OBJECT(.\Objects\CMP.obj)

line level    source

   1          /* --------------------------- (C) COPYRIGHT 2020 Fortiortech ShenZhen -----------------------------
   2              File Name      : CMP.c
   3              Author         : Fortiortech  Appliction Team
   4              Version        : V1.0
   5              Date           : 2020-06-30
   6              Description    : This file contains .C file function used for Motor Control.
   7          ----------------------------------------------------------------------------------------------------  
   8                                                 All Rights Reserved
   9          ------------------------------------------------------------------------------------------------- */
  10          #include "FU68xx_4.h"
  11          #include "MyProject.h"
  12          
  13          void CMP0_Init(void)
  14          {
  15   1        /******CMP0/1/2 端口模拟功能设置*******/
  16   1        SetBit(P1_AN , PIN4); //CMP0 Pin设置为模拟模式  +
  17   1        SetBit(P1_AN , PIN6); //CMP1 Pin设置为模拟模式  +
  18   1        SetBit(P2_AN , PIN1); //CMP2 Pin设置为模拟模式  +
  19   1        ClrBit(P1_PU , PIN4); //P14上拉关闭
  20   1          
  21   1        ClrBit(CMP_CR0 , CMP2IM1);//CMP2中断模式
  22   1        ClrBit(CMP_CR0 , CMP2IM0);//00-->No Interrupt  01-->Rising  10-->Falling   11-->Rising/Falling
  23   1        ClrBit(CMP_CR0 , CMP1IM1);//CMP1中断模式
  24   1        ClrBit(CMP_CR0 , CMP1IM0);//00-->No Interrupt  01-->Rising  10-->Falling   11-->Rising/Falling
  25   1        ClrBit(CMP_CR0 , CMP0IM1);//CMP0中断模式
  26   1        ClrBit(CMP_CR0 , CMP0IM0);//00-->No Interrupt  01-->Rising  10-->Falling   11-->Rising/Falling
  27   1        
  28   1        SetBit(CMP_CR1 , CMP0HYS2);//CMP0迟滞电压配置
  29   1        ClrBit(CMP_CR1 , CMP0HYS1);//111-->±12mV   110-->+12mV   101-->-12mV   100-->±6mV
  30   1        ClrBit(CMP_CR1 , CMP0HYS0);//011-->+6mV    010-->-6mV    001-->±3mV    000-->No HYS
  31   1        
  32   1        ClrBit(CMP_CR2 , CMP0MOD1);//00-->无内置电阻3比较器         01-->有内置电阻3比较器模式
  33   1        SetBit(CMP_CR2 , CMP0MOD0);//10-->3差分比较器        11-->2比较器
  34   1        
  35   1        ClrBit(CMP_CR2 , CMP0SEL1);//00-->3比较器轮询        01-->P14+固定选择CMP0OUT
  36   1        ClrBit(CMP_CR2 , CMP0SEL0);//10-->P16+固定选择CMP1OUT   11-->P21+固定选择CMP2OUT
  37   1        
  38   1        ClrBit(CMP_CR2 , CMP0CSEL1);//00-->正常轮询（0.66us）   01-->快速轮询（0.33us）
  39   1        ClrBit(CMP_CR2 , CMP0CSEL0);//10-->低速轮询（2.67us）   11-->偏低速轮询（1.33us）
  40   1        
  41   1      //  ClrBit(CMP_CR3 , CMPSEL2);  //011-->P07作为CMP2输出
  42   1      //  SetBit(CMP_CR3 , CMPSEL1);  //010-->P07作为CMP1输出
  43   1      //  SetBit(CMP_CR3 , CMPSEL0);  //001-->P07作为CMP0输出
  44   1        
  45   1        ClrBit(CMP_CR4 , CMP0_FS);  //CMP1/2功能转移  仅CMP0_MOD=01时有效
  46   1        
  47   1        SetBit(CMP_CR2 , CMP0EN); //CMP0 Enable
  48   1        /****************************************************************/
  49   1        PCMP1 = 0;
  50   1          PCMP0 = 0;
  51   1        /***********************比较器采样设置***************************/
  52   1        CMP_SAMR = 0x42;  //延迟开启采样时间[7:4]&关闭采样时间[3:0]
  53   1                  //延迟时间= CSOND x 41.67 x 8ns CSOND 必须>= CSOFFD
  54   1                  
C51 COMPILER V9.53.0.0   CMP                                                               04/09/2024 13:54:56 PAGE 2   

  55   1      //  SetBit(CMP_CR3 , SAMSEL1);  //CMP0/1/2 & ADC 采样时机配置
  56   1      //  ClrBit(CMP_CR3 , SAMSEL0);  //00-->0N&0FF采样，无延迟   01-->0FF采样，延迟CMP_SAMR
  57   1      //                              //10-->0N采样，延迟CMP_SAMR  11-->0N&0FF采样，延迟CMP_SAMR
  58   1      //  ClrBit(CMP_CR3 , CMPDTEN);  //比较器死区采样使能 0-->Disable 1-->Enable
  59   1      //  ClrBit(CMP_CR3 , DBGSEL1);  //DEBUG信号选择-->输出至P01
  60   1      //  SetBit(CMP_CR3 , DBGSEL0);  //00-->Disable      01-->方波屏蔽续流结束和检测到过零点信号
  61   1      //                              //10-->ADC trigger信号  11-->比较器采样区间
  62   1                      
  63   1        /****************************************************************/
  64   1      }
  65          volatile unsigned short Temp_DAC0 = 0x00;
  66          
  67          /*****************************************************************************
  68           * Function      : CMP3_Init
  69           * Description   : CMP3_INIT
  70           * Input         : void  
  71           * Output        : None
  72           * Return        : 
  73           * Others        : 
  74           * Record
  75           * 1.Date        : 20190320
  76           *   Author      : Bruce HW&RD
  77           *   Modification: Created function
  78           *   CMP3 Pin设置为模拟模式  + 
  79           *     00-->P27-单比较器模式    
  80           *     01-->P20/P23-双比较器模式
  81           *     1X-->P20/P23/P27-三比较器模式
  82          *****************************************************************************/
  83          
  84          void CMP3_Init(void)
  85          {
  86   1          uint16 DAC_OvercurrentTempValue;
  87   1          /******CMP3 端口模拟功能设置*******/    
  88   1          #if (Shunt_Resistor_Mode == Single_Resistor)
  89   1          {
  90   2              SetBit(P2_AN , P27);      
  91   2              ClrBit(CMP_CR1 , CMP3MOD1); 
  92   2              ClrBit(CMP_CR1 , CMP3MOD0);
  93   2          }
  94   1          #elif (Shunt_Resistor_Mode == Double_Resistor)
                  {
                      SetBit(P2_AN , P27);  
                      ClrBit(CMP_CR1 , CMP3MOD1); 
                      ClrBit(CMP_CR1 , CMP3MOD0);
                  }
                  #elif (Shunt_Resistor_Mode == Three_Resistor)
                  {
                      SetBit(P2_AN , P27 | P23 | P20);
                      SetBit(CMP_CR1 , CMP3MOD1);
                      ClrBit(CMP_CR1 , CMP3MOD0); 
                  }
                  #endif  //end Shunt_Resistor_Mode
 107   1          
 108   1          #if (Compare_Mode == Compare_Hardware)
                  {
                      SetBit(P2_AN , P26);
                      ClrBit(P2_OE , P26); 
                      ClrBit(DAC_CR , DAC0_1EN);
                  }
                  #elif (Compare_Mode == Compare_DAC)
 115   1          {
 116   2              /**P2.6使能其模拟功能，使能数字输出**/
C51 COMPILER V9.53.0.0   CMP                                                               04/09/2024 13:54:56 PAGE 3   

 117   2              SetBit(P2_AN , P26);
 118   2              SetBit(P2_OE , P26); 
 119   2              /******************************
 120   2              0: 正常模式，DAC输出电压范围为0到VREF
 121   2              1: 半电压转换模式，DAC输出电压范围为VHALF到VREF
 122   2              ****************************/
 123   2              ClrBit(DAC_CR , DACMOD);
 124   2      
 125   2              /**********设置DAC过流值*****************/
 126   2          DAC_OvercurrentTempValue = DAC_OvercurrentValue;
 127   2              if(DAC_OvercurrentTempValue % 2 == 0)
 128   2              {
 129   3                ClrBit(DAC1_DR , DAC0_DR_0);
 130   3              }
 131   2              else
 132   2              {
 133   3                SetBit(DAC1_DR , DAC0_DR_0);
 134   3              }
 135   2              
 136   2              
 137   2      //        DAC0_DR = DAC_OvercurrentValue;
 138   2              DAC0_DR   = DAC_OvercurrentValue >> 1;
 139   2              Temp_DAC0 = DAC_OvercurrentValue;
 140   2      
 141   2              /**********DAC0 Enable******************/
 142   2              SetBit(DAC_CR , DAC0_1EN);
 143   2          }
 144   1          #endif  //end Compare_Mode
 145   1          
 146   1          SetBit(CMP_CR1 , CMP3HYS);  // CMP3 Hysteresis voltage Enable
 147   1          /*---------------------------------------------------------------------------------
 148   1        选择母线电流保护触发信号源，外部中断0或者比较器3中断。
 149   1        0-CMP3,1-INT0
 150   1          ---------------------------------------------------------------------------------*/
 151   1          ClrBit(EVT_FILT , EFSRC);
 152   1          /*---------------------------------------------------------------------------------
 153   1          触发硬件保护后硬件关闭驱动输出MOE配置
 154   1          00--MOE不自动清零
 155   1          01--MOE自动清零
 156   1          ----------------------------------------------------------------------------------*/
 157   1          ClrBit(EVT_FILT , MOEMD1);
 158   1          SetBit(EVT_FILT , MOEMD0);
 159   1          /*----------------------------------------------------------------------------------
 160   1          母线电流保护时间滤波宽度
 161   1          00-不滤波    
 162   1          01-4cpu clock    
 163   1          10-8cpu clock    
 164   1          11-16cpu clock
 165   1          -----------------------------------------------------------------------------------*/
 166   1          SetBit(EVT_FILT , EFDIV1);
 167   1          SetBit(EVT_FILT , EFDIV0);
 168   1      
 169   1          SetBit(CMP_CR1 , CMP3EN);   //CMP3 Enable
 170   1      }
 171          
 172          /*****************************************************************************
 173           * Function      : CMP3_Interrupt_Init
 174           * Description   : CMP3中断配置
 175           * Input         : void  
 176           * Output        : None
 177           * Return        : 
 178           * Others        : 
C51 COMPILER V9.53.0.0   CMP                                                               04/09/2024 13:54:56 PAGE 4   

 179           * Record
 180           * 1.Date        : 20190320
 181           *   Author      : Bruce HW&RD
 182           *   Modification: Created function
 183          
 184          *****************************************************************************/
 185          void CMP3_Interrupt_Init(void)
 186          {
 187   1          ClrBit(CMP_SR , CMP3IF);
 188   1          /*------------------------------------------------------------------------
 189   1          比较器中断模式配置
 190   1          00: 不产生中断  
 191   1          01: 上升沿产生中断  
 192   1          10: 下降沿产生中断  
 193   1          11: 上升/下降沿产生中断
 194   1          ------------------------------------------------------------------------*/
 195   1          ClrBit(CMP_CR0 , CMP3IM1);
 196   1          SetBit(CMP_CR0 , CMP3IM0);
 197   1      
 198   1          PCMP31 = 1;
 199   1          PCMP30 = 1;         // 中断优先级别3
 200   1      }
 201          
 202          
 203          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    190    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      2    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
